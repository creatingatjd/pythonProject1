# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none
variables:
  public_ip: "[\'44.212.71.114\']"

pool:
  vmImage: ubuntu-latest
- task: Bash@3
  displayName: Update IP
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      sed -i "s/^ALLOWED_HOSTS = \['.*'\]/ALLOWED_HOSTS = $(public_ip)/" settings.py
    workingDirectory: '$(Build.SourcesDirectory)/webpro'
- task: CmdLine@2
  displayName: installing Requirements File
  inputs:
    script: 'pip install -r requirements.txt'
- task: PythonScript@0
  displayName: Compiling the python Code
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'manage.py'
- task: Docker@2
  displayName: Build and push Docker Image
  inputs:
    containerRegistry: 'mydockerhub'
    repository: '1234si/pythonapp'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: '$(Build.BuildId)'
- task: CopyFiles@2
  displayName: Copy Files
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      docker-compose.yml
      nginx.conf
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: Publishing Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'